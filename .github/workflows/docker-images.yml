name: Build docker images
on:
  workflow_call:
    inputs:
      lang:
        description: SDK language to build the container for
        required: true
        type: string
      sdk-repo-ref:
        description: Git ref of SDK repo to use to build (overrides "sdk-version")
        required: false
        type: string
      sdk-repo-url:
        description: URL of SDK repo to use to build (only used if "sdk-repo-ref" is provided)
        required: false
        type: string
      sdk-version:
        description: Version of SDK to use (ignored if "sdk-repo-ref" is provided)
        required: false
        type: string
      do-push:
        description: If set, push the built image to Docker Hub.
        type: boolean
        default: false
      as-latest:
        description: If set, tag the images as latest for the lang ('<lang>-latest').
        type: boolean
        default: false
      omes-repo-path:
        type: string
        default: 'temporalio/omes'
      omes-repo-ref:
        type: string
        default: 'main'

jobs:
  build-image:
    name: Build ${{ inputs.lang }} omes docker image
    runs-on: ubuntu-latest
    env:
      REPO_URL: ${{ github.event.pull_request.head.repo.html_url }}
    steps:
      - name: Print build information
        run: 'echo head_ref: "$GITHUB_HEAD_REF", ref: "$GITHUB_REF"'

      - name: Checkout omes repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.omes-repo-path }}
          ref: ${{ inputs.omes-repo-ref }}
          submodules: true
          fetch-depth: 0

      - name: Checkout lang repo
        if: ${{ inputs.sdk-repo-ref }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.sdk-repo-url }}
          submodules: recursive
          path: checked-out-sdk/
          ref: ${{ inputs.sdk-repo-ref }}
          fetch-depth: 0

      - name: Set SDK Version Variable
        run: |
          if [ -z "${{ inputs.sdk-version }}" ]; then
              echo "SDK_VERSION=checked-out-sdk/" >> $GITHUB_ENV
          else
              echo "SDK_VERSION=${{ inputs.sdk-version }}" >> $GITHUB_ENV
          fi

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - name: Lint dockerfile
        run: docker run --rm -i hadolint/hadolint < dockerfiles/${{inputs.lang}}.Dockerfile

      - name: Build docker image
        run: |
          go run ./cmd build-worker-image --language ${{ inputs.lang }} \
          --version ${{ env.SDK_VERSION }} \
          --save-image /tmp/image.tar \
          ${{ inputs.sdk-repo-ref && format('--image-tag {0}-{1}', inputs.lang, inputs.sdk-repo-ref) || ''}} \
          ${{ inputs.as-latest && '--tag-as-latest' || ''}}

      - name: Prepare docker artifact
        run: |
          # Upload-artifact has no good way to flatten paths, so we need to move the compose file
          # to avoid some disgustingly long inner path inside the artifact zip.
          echo -n "${{env.IMAGE_TAG}}" > /tmp/image_tag

      - name: Upload docker artifacts
        uses: actions/upload-artifact@v4
        with:
          name: omes-${{ inputs.lang }}-docker-image
          path: |
            /tmp/image.tar
            /tmp/image_tag

      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: inputs.do-push
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Push image to DockerHub
        if: inputs.do-push
        run: go run ./cmd push-images
