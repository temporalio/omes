name: Build docker images
on:
  workflow_call:
    inputs:
      lang:
        description: SDK language to build the container for
        required: true
        type: string
      sdk-repo-ref:
        description: Git ref of SDK repo to use to build (overrides "sdk-version")
        required: false
        type: string
      sdk-repo-url:
        description: URL of SDK repo to use to build (only used if "sdk-repo-ref" is provided)
        required: false
        type: string
      sdk-version:
        description: Version of SDK to use (ignored if "sdk-repo-ref" is provided)
        required: false
        type: string
      docker-tag-ext:
        description: Tag extension to use for the built image (only when using sdk-repo-ref)
        required: false
        type: string
      do-push:
        description: If set, push the built image to Docker Hub.
        type: boolean
        default: false
      as-latest:
        description: If set, tag the images as latest for the lang ('<lang>-latest').
        type: boolean
        default: false
      omes-repo-path:
        type: string
        default: 'temporalio/omes'
      omes-repo-ref:
        type: string

jobs:
  publish-artifacts:
    name: Publish ${{ inputs.lang }} artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout omes repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.omes-repo-path }}
          ref: ${{ inputs.omes-repo-ref || github.head_ref }}
          submodules: true
          fetch-depth: 0

      - name: Lint dockerfile
        run: docker run --rm -i hadolint/hadolint hadolint --ignore DL3029 - < dockerfiles/${{inputs.lang}}.Dockerfile

      - uses: actions/setup-go@v4
        if: ${{ !inputs.do-push || github.event.pull_request.head.repo.fork }}
        with:
          go-version: '^1.20'

      - name: Set up Docker Buildx
        if: ${{ !inputs.do-push || github.event.pull_request.head.repo.fork }}
        uses: docker/setup-buildx-action@v3

      - name: Build and save image for artifacts
        if: ${{ !inputs.do-push || github.event.pull_request.head.repo.fork }}
        run: |
          go run ./cmd build-worker-image --language ${{ inputs.lang }} \
          --version ${{ inputs.sdk-version || 'checked-out-sdk/' }} \
          --save-image /tmp/image.tar \
          --platform linux/amd64 \
          ${{ inputs.sdk-repo-ref && format('--image-tag {0}-{1}', inputs.lang, inputs.docker-tag-ext) || ''}} \
          ${{ inputs.as-latest && '--tag-as-latest' || ''}}

      - name: Prepare docker artifact
        if: ${{ !inputs.do-push || github.event.pull_request.head.repo.fork }}
        run: |
          echo -n "${{env.SAVED_IMAGE_TAG}}" > /tmp/image_tag

      - name: Upload docker artifacts
        if: ${{ !inputs.do-push || github.event.pull_request.head.repo.fork }}
        uses: actions/upload-artifact@v4
        with:
          name: omes-${{ inputs.lang }}-docker-image
          path: |
            /tmp/image.tar
            /tmp/image_tag

  publish-dockerhub:
    name: Publish ${{ inputs.lang }} to Docker Hub
    runs-on: ubuntu-latest
    if: inputs.do-push && !github.event.pull_request.head.repo.fork
    steps:
      - name: Checkout omes repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.omes-repo-path }}
          ref: ${{ inputs.omes-repo-ref || github.head_ref }}
          submodules: true
          fetch-depth: 0

      - name: Checkout lang repo
        if: ${{ inputs.sdk-repo-ref }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.sdk-repo-url }}
          submodules: recursive
          path: checked-out-sdk/
          ref: ${{ inputs.sdk-repo-ref }}
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push to Docker Hub
        run: |
          go run ./cmd build-push-worker-image --language ${{ inputs.lang }} \
          --version ${{ inputs.sdk-version || 'checked-out-sdk/' }} \
          --platform linux/amd64,linux/arm64 \
          --repo-prefix temporaliotest \
          ${{ inputs.sdk-repo-ref && format('--image-tag {0}-{1}', inputs.lang, inputs.docker-tag-ext) || ''}} \
          ${{ inputs.as-latest && '--tag-as-latest' || ''}}

      - name: üê≥ Docker Hub image tag
        run: |
          echo "::notice title=üê≥ Docker Hub image published for ${{ inputs.lang }}::Check temporaliotest/omes tags"
