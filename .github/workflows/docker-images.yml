name: Build docker images
on:
  workflow_call:
    inputs:
      build-command:
        description: Build command to run (e.g., 'build-worker-image' or 'build-cli-image')
        required: true
        type: string
      push-command:
        description: Push command to run (e.g., 'build-push-worker-image' or 'build-push-cli-image')
        required: true
        type: string
      lang:
        description: SDK language to build the container for (only for worker images)
        required: false
        type: string
      sdk-repo-ref:
        description: Git ref of SDK repo to use to build (overrides "sdk-version")
        required: false
        type: string
      sdk-repo-url:
        description: URL of SDK repo to use to build (only used if "sdk-repo-ref" is provided)
        required: false
        type: string
      sdk-version:
        description: Version of SDK to use (ignored if "sdk-repo-ref" is provided, not used for CLI images)
        required: false
        type: string
      docker-tag-ext:
        description: Tag extension to use for the built image (only when using sdk-repo-ref)
        required: false
        type: string
      do-push:
        description: If set, push the built image to Docker Hub.
        type: boolean
        default: false
      as-latest:
        description: If set, tag the images as latest for the lang ('<lang>-latest').
        type: boolean
        default: false
      omes-repo-path:
        type: string
        default: "temporalio/omes"
      omes-repo-ref:
        type: string

jobs:
  publish-dockerhub:
    name: Publish ${{ inputs.lang || 'CLI' }} to Docker Hub
    runs-on: ubuntu-latest
    if: inputs.do-push && !github.event.pull_request.head.repo.fork
    timeout-minutes: 30
    steps:
      - name: Checkout omes repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.omes-repo-path }}
          ref: ${{ inputs.omes-repo-ref || github.head_ref }}
          submodules: true
          fetch-depth: 0

      - name: Checkout lang repo
        if: ${{ inputs.sdk-repo-ref }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.sdk-repo-url }}
          submodules: recursive
          path: checked-out-sdk/
          ref: ${{ inputs.sdk-repo-ref }}
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push to Docker Hub
        env:
          LANG: ${{ inputs.lang }}
          SDK_VERSION: ${{ inputs.sdk-version || 'checked-out-sdk/' }}
          IMAGE_TAG_ARGS: ${{ inputs.sdk-repo-ref && format('--image-tag {0}-{1}', inputs.lang, inputs.docker-tag-ext) || ''}}
          TAG_LATEST_ARGS: ${{ inputs.as-latest && '--tag-as-latest' || ''}}
          LANG_ARGS: ${{ inputs.lang && format('--language {0}', inputs.lang) || '' }}
          VERSION_ARGS: ${{ inputs.sdk-version && format('--version {0}', inputs.sdk-version) || '' }}
        run: |
          go run ./cmd/dev ${{ inputs.push-command }} \
          --platform linux/amd64,linux/arm64 \
          --repo-prefix temporaliotest \
          $LANG_ARGS \
          $VERSION_ARGS \
          $IMAGE_TAG_ARGS \
          $TAG_LATEST_ARGS

      - name: üê≥ Docker Hub image tag
        env:
          LANG: ${{ inputs.lang }}
        run: |
          echo "::notice title=üê≥ Docker Hub image published for ${{ inputs.lang || 'CLI' }}::Check temporaliotest/omes tags"
